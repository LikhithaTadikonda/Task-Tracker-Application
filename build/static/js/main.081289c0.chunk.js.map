{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","App","useState","showAddTask","setShowAddTask","setTasks","onadd","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC3B,OACA,wBAAQA,QAASA,EAASC,MAAQ,CAAEC,gBAAiBJ,GACrDK,UAAU,MADV,SACiBJ,KAKrBF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCjBTQ,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC5B,OACI,yBAAQL,UAAU,SAAlB,UACI,6BAAKG,IACL,cAAC,EAAD,CACER,MAAOU,EAAU,MAAQ,QACzBT,KAAMS,EAAU,QAAU,MAC1BR,QAASO,QAMvBF,EAAOD,aAAe,CAClBE,MAAO,gBAOID,Q,OCJAI,EAlBF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,sBACCT,UAAS,eAAUO,EAAKG,UAAY,YACpCC,cAAe,kBAAMF,EAASF,EAAKK,KAFpC,UAIG,+BACGL,EAAKX,KAAM,IACZ,cAAC,IAAD,CACIE,MAAO,CAACH,MAAM,MAAOkB,OAAO,WAC5BhB,QAAS,kBAAMW,EAASD,EAAKK,UAGlC,4BAAIL,EAAKO,UCFNC,EAVD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9B,OACG,mCACKO,EAAMC,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAnDF,EAAKK,UCyDZM,MA3Df,WACE,MAAsCC,oBACrC,GADD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAA0BF,mBAAS,CACjC,CACAP,GAAI,EACJhB,KAAM,sBACNkB,IAAI,oBACJJ,UAAU,GAEZ,CACGE,GAAI,EACLhB,KAAK,oBACLkB,IAAI,oBACJJ,UAAS,GAEX,CACEE,GAAI,EACJhB,KAAM,gBACNkB,IAAK,mBACLJ,UAAU,KAjBZ,mBAAOM,EAAP,KAAcM,EAAd,KAyCA,OACE,sBAAKtB,UAAU,YAAf,UACE,cAAC,EAAD,CAAQI,MAAO,kBAAMiB,GAAgBD,IACrCf,QAASe,IAERA,GAAe,yBAASG,MAxBZ,SAAChB,GACf,IAAMK,EAAKY,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EACzCC,EAAO,aAAKf,MAAOL,GACzBe,EAAS,GAAD,mBAAKN,GAAL,CAAYW,QAsBlBX,EAAMY,OAAS,EACf,cAAC,EAAD,CAAOZ,MAAOA,EAAOR,SAnBP,SAACI,GAClBU,EAASN,EAAMa,QAAO,SAACtB,GAAD,OAAUA,EAAKK,KAAOA,OAkBEH,SAdzB,SAACG,GACtBU,EAASN,EAAMC,KAAI,SAACV,GAAD,OAClBA,EAAKK,IAAMA,EAAX,2BAAqBL,GAArB,IAA2BG,UAAWH,EAAKG,WAAaH,SAcpD,uBC9CMuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.081289c0.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n    <button onClick={onClick} style={ { backgroundColor: color }} \r\n    className='btn'>{text}\r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = { \r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button\r\n              color={showAdd ? 'red' : 'green'} \r\n              text={showAdd ? 'Close' : 'Add'} \r\n              onClick={onAdd} \r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div \r\n         className={`task ${task.reminder && 'reminder'}`}\r\n         onDoubleClick={() => onToggle(task.id)}\r\n         >\r\n           <h3>\r\n             {task.text}{' '} \r\n             <FaTimes \r\n                 style={{color:'red', cursor:'pointer' }} \r\n                 onClick={() => onDelete(task.id)} \r\n               />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return ( \r\n       <>\r\n           {tasks.map((task) => (\r\n           <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n           ))} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n\r\n\r\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport addTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState\n  (false)\n  const [tasks, setTasks] = useState([\n    {\n    id: 1,\n    text: 'Doctors Appointment',\n    day:'Feb 5th at 2:30pm',\n    reminder: true,\n   },\n  {\n     id: 2,\n    text:'Meeting at School',\n    day:'Feb 6th at 1:30pm',\n    reminder:true,\n  },\n  {\n    id: 3,\n    text: 'Food Shopping',\n    day: 'Feb 5that 2:30pm',\n    reminder: false,\n   },\n ])\n\n   //Add Task\n   const addTask = (task) => {\n     const id = Math.floor(Math.random() * 10000) + 1\n     const newTask = { id, ...task }\n     setTasks([...tasks, newTask])\n   }\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = (id) =>{\n    setTasks(tasks.map((task) =>\n     task.id == id ? { ...task, reminder: !task.reminder } : task\n     )\n    )\n  }\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask} \n      /> \n      {showAddTask && <addTask onadd={addTask} />}\n      {tasks.length > 0 ? (\n       <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> \n       ): (\n         'No Tasks To Show'\n       )}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}